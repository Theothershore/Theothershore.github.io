<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蜗牛的小屋</title>
  
  <subtitle>Hexo</subtitle>
  <link href="https://dh15219984801.store/atom.xml" rel="self"/>
  
  <link href="https://dh15219984801.store/"/>
  <updated>2020-10-11T02:21:52.958Z</updated>
  <id>https://dh15219984801.store/</id>
  
  <author>
    <name>Theothershore</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建博客</title>
    <link href="https://dh15219984801.store/2020/10/09/title%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://dh15219984801.store/2020/10/09/title%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-10-08T16:24:13.474Z</published>
    <updated>2020-10-11T02:21:52.958Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，github注册"><a href="#一，github注册" class="headerlink" title="一，github注册"></a>一，github注册</h4><p><strong>使用github来托管项目文件</strong></p><p><strong>仓库：即你的项目，你想在github上开源一个项目，就必须要新建一个Repository。</strong></p><p><strong>创建项目</strong>    项目名：用户名.github.io</p><p>搭建步骤：创建个人站点–新建仓库（注:仓库名必须是【用户名.github.io】）</p><p><strong>个人站点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;用户名.github.io</span><br></pre></td></tr></table></figure><h4 id="二，安装node"><a href="#二，安装node" class="headerlink" title="二，安装node"></a>二，安装node</h4><p>打开node官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;</span><br></pre></td></tr></table></figure><p>下载安装，点击Add to PATH选项，添加到环境变量</p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDICPDDDHDFCOHAGOGH"></p><p>则安装完成。</p><p>安装完node后，就可以使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="三，安装git"><a href="#三，安装git" class="headerlink" title="三，安装git"></a>三，安装git</h4><p><strong>通过git管理github托管项目代码</strong></p><p><strong>git是一个免费，开源的版本控制软件。</strong></p><h4 id="1，git基本工作流程"><a href="#1，git基本工作流程" class="headerlink" title="1，git基本工作流程"></a>1，git基本工作流程</h4><p>2.1，工作区（Working Directory） 添加，编辑，修改文件等</p><p>2.2，暂存区  暂存已经修改的文件最后统一提交到git仓库中</p><p>2.3，Git Repository（Git 仓库） 最终确定的文件保存到仓库，成为一个新的版本，并且对他人可见</p><p>a.  查看工作区和暂存区的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>b. 把工作区的内容添加到暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名</span><br></pre></td></tr></table></figure><p>c. 将暂存区的文件提交到仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;提交描述&quot;</span><br></pre></td></tr></table></figure><h4 id="2，实战演练"><a href="#2，实战演练" class="headerlink" title="2，实战演练"></a>2，实战演练</h4><p><strong>a，在文件目录下创建文件夹</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir 文件名</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDHCPDDDGDFCOHAGOGH"></p><p><strong>b，在文件内初始化git（创建git仓库）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd test</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDJCPDDDGDGCOHAGOGH"></p><p><strong>c，向仓库添加文件</strong></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADACPDDDGDICOHAGOGHhttp://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADBCPDDDGDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADBCPDDDGDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADCCPDDDHDACOHAGOGH"></p><h4 id="3，删除文件"><a href="#3，删除文件" class="headerlink" title="3，删除文件"></a>3，删除文件</h4><p><strong>a，删除工作区文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf 1.php</span><br></pre></td></tr></table></figure><p><strong>b，删除暂存区文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm 1.php</span><br></pre></td></tr></table></figure><p><strong>c，提交操作</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#39;提交描述&#39;</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADDCPDDDHDECOHAGOGH"></p><h4 id="4，Git初始化及仓库创建和操作"><a href="#4，Git初始化及仓库创建和操作" class="headerlink" title="4，Git初始化及仓库创建和操作"></a>4，Git初始化及仓库创建和操作</h4><p>设置用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#39;用户名&#39;</span><br></pre></td></tr></table></figure><p>设置用户名邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &#39;用户邮箱&#39;</span><br></pre></td></tr></table></figure><p>查看设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -list</span><br></pre></td></tr></table></figure><h4 id="5，Git管理远程仓库"><a href="#5，Git管理远程仓库" class="headerlink" title="5，Git管理远程仓库"></a>5，Git管理远程仓库</h4><p><strong>a，使用远程仓库的目的</strong></p><p>作用:备份，实现代码共享集中化管理</p><p><strong>b，将本地仓库同步到git远程仓库中</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>4，git克隆操作</strong></p><p>目的：将远程仓库（对应的项目）复制到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure><h4 id="四，githubSSH配置"><a href="#四，githubSSH配置" class="headerlink" title="四，githubSSH配置"></a>四，githubSSH配置</h4><p>GitHub配置SSH Key的目的是为了帮助我们在通过git提交代码时，不需要繁琐的验证过程，简化操作流程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;xiangshuo1992&#x2F;preload.git</span><br><span class="line">git@github.com:xiangshuo1992&#x2F;preload.git</span><br></pre></td></tr></table></figure><p>这两个地址展示的是同一个项目，前者是https url 直接有效网址打开，但是用户每次通过git提交的时候都要输入用户名和密码；后者是SSH URL，在通过git提交代码时，不需要验证过程。</p><p><strong>1，检测是否存在SSH KEY</strong></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADECPDDDHDHCOHAGOGH"></p><p><strong>如果没有，则需要生成一下</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Github的注册邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADFCPDDDHDICOHAGOGH"></p><h4 id="五，安装Hexo"><a href="#五，安装Hexo" class="headerlink" title="五，安装Hexo"></a>五，安装Hexo</h4><p>Hexo就是我们的个人博客网站的框架。这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。</p><p>在创建的文件夹命令行下，使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装成功后，需要初始化我们的博客，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 博客名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install #安装npm</span><br><span class="line">hexo s -p 端口号 #本地运行</span><br><span class="line">例：hexo s -p 5555</span><br><span class="line"></span><br><span class="line">或者 hexo s  #会自动给你配置一个端口</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADJCPDDDHDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDBDECPDDDJDGCOHAGOGH"></p><p><strong>Hexo常用命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级</span><br><span class="line">hexo init #初始化博客</span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line">hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate #生成</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server #启动服务预览</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><h4 id="六，发布网站"><a href="#六，发布网站" class="headerlink" title="六，发布网站"></a>六，发布网站</h4><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件</p><p>进入跟目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件</p><p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><p>deploy:<br>type: git<br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>branch: master</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一，github注册&quot;&gt;&lt;a href=&quot;#一，github注册&quot; class=&quot;headerlink&quot; title=&quot;一，github注册&quot;&gt;&lt;/a&gt;一，github注册&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用github来托管项目文件&lt;/strong&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Pwn环境搭建</title>
    <link href="https://dh15219984801.store/2020/10/03/Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://dh15219984801.store/2020/10/03/Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-03T05:33:06.988Z</published>
    <updated>2020-10-16T03:35:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>​                                                                       </p><h4 id="1-ubuntu16-04设置系统语言为中文"><a href="#1-ubuntu16-04设置系统语言为中文" class="headerlink" title="1.ubuntu16.04设置系统语言为中文"></a>1.ubuntu16.04设置系统语言为中文</h4><p>参考文献：<a href="https://jingyan.baidu.com/article/3aed632ec1d120701180916b.html">https://jingyan.baidu.com/article/3aed632ec1d120701180916b.html</a></p><h4 id="2-更换Ubuntu16-04镜像下载源，推荐阿里源"><a href="#2-更换Ubuntu16-04镜像下载源，推荐阿里源" class="headerlink" title="2.更换Ubuntu16.04镜像下载源，推荐阿里源"></a>2.更换Ubuntu16.04镜像下载源，推荐阿里源</h4><p>首先我们要找到国内的镜像源路径，这里要注意要找ubuntu16.04相对应的，打开链接如图：<a href="https://www.cnblogs.com/hello-/articles/11151038.htm">https://www.cnblogs.com/hello-/articles/11151038.htm</a></p><p><img src="https://i.loli.net/2020/10/15/gPuz9nUkeZVBrFD.png" alt="image-20201015145406067.png"></p><p>接着备份系统自带更新源配置文件，打开终端直接用命令：cp /etc/apt/sources.list /etc/apt/sources.list.backup 进行备份。</p><p>继续配置文件sources.list内容，输入命令：gedit  sources.list 打开文件，把文件内容全部删除，再把更新源路径粘贴进来。粘贴后如下图：<img src="https://i.loli.net/2020/10/15/qjYrBins1DmCQNO.png" alt="1602745093_1_.png"></p><p>保存，退出。</p><p>最后更新源：输入命令：apt  update （也可以用apt-get update，<a href="https://blog.csdn.net/maizousidemao/article/details/79859669">apt与apt-get的区别</a>）。</p><p>开始更新源。</p><h4 id="3-必备环境安装"><a href="#3-必备环境安装" class="headerlink" title="3.必备环境安装"></a>3.必备环境安装</h4><p>安装git ：sudo apt-get install git </p><p>安装VIM ：sudo apt-get install vim</p><p>安装完Git之后一般情况情况下，因为特定原因导致，DNS解析出现问题从而使得Git Clone 速度巨慢。解决办法：</p><p>登录网页<a href="http://www.ipaddress.com/">www.ipaddress.com</a> 查找 <a href="https://links.jianshu.com/go?to=http://github.global-ssl.fastly.net/">github.global.ssl.fastly.net</a> 和<a href="https://links.jianshu.com/go?to=http://github.com/">github.com </a>域名对应地址：</p><p><img src="https://i.loli.net/2020/10/16/Ff7bySNPGLhn38p.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/10/16/fd6htvrcGemRA1T.png" alt="image.png"></p><p>更改DNS解析地址 ：sudo gedit /etc/hosts</p><p>在其最后加上所查地址：</p><p>151.101.185.194 <a href="https://links.jianshu.com/go?to=http://github.global-ssl.fastly.net/">github.global.ssl.fastly.net</a></p><p>192.30.253.112  <a href="https://links.jianshu.com/go?to=http://github.com/">github.com</a></p><p><img src="https://i.loli.net/2020/10/16/JEjCwZkqgV9fuI3.png" alt="image.png"></p><p>保存退出，重启网卡：sudo /etc/init.d/networking restart</p><h4 id="4-安装pwntools"><a href="#4-安装pwntools" class="headerlink" title="4.安装pwntools"></a>4.安装pwntools</h4><p>参考文献：<a href="https://www.jianshu.com/p/a7e2da50263e">https://www.jianshu.com/p/a7e2da50263e</a></p><h5 id="32位依赖库："><a href="#32位依赖库：" class="headerlink" title="32位依赖库："></a>32位依赖库：</h5><p> apt-get install lib32ncurses5</p><p> apt-get install lib32z1</p><h5 id="安装pwndbg："><a href="#安装pwndbg：" class="headerlink" title="安装pwndbg："></a>安装pwndbg：</h5><p>  git clone<a href="https://links.jianshu.com/go?to=https://github.com/pwndbg/pwndbg">https://github.com/pwndbg/pwndbg</a></p><p>  cd pwndbg</p><p>  ./setup.sh</p><h5 id="安装pip："><a href="#安装pip：" class="headerlink" title="安装pip："></a>安装pip：</h5><p>参考文献 ：<a href="https://blog.csdn.net/mrwxh/article/details/79991339?utm_medium=distribute.pc_relevant.none-task-blog-title-8&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/mrwxh/article/details/79991339?utm_medium=distribute.pc_relevant.none-task-blog-title-8&amp;spm=1001.2101.3001.4242</a></p><p>​    01 下载pip：<a href="https://pypi.org/project/pip/#files"> pip-10.0.0.tar</a></p><p>​    02 将pip包上传至linux操作系统中，并解压</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf pip<span class="number">-10.0</span><span class="number">.0</span>.tar.gz</span><br></pre></td></tr></table></figure><p>​    03 切换到解压出来的pip目录，并且安装pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pip<span class="number">-10.0</span><span class="number">.0</span>/</span><br><span class="line"></span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><p>   <strong>报错：</strong>ImportError: No module named setuptools</p><p>​    解决方案：下载安装<a href="https://pan.baidu.com/s/1SXPexMkBP5RxJmypVXg-Fg">setuptools</a>：</p><p>​    下载：下载<a href="https://pan.baidu.com/s/1SXPexMkBP5RxJmypVXg-Fg">setuptools</a></p><p>​    安装：上传至ubuntu系统的用户目录后解压；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd setuptools<span class="number">-39.0</span><span class="number">.1</span>/</span><br><span class="line">sudo python setup.py install</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p>​     04 切换到之前的pip目录安装pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pip<span class="number">-10.0</span><span class="number">.0</span>/</span><br><span class="line">sudo python2 setup.py install</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p>​    05 检测：Ubuntu 检测是否安装了pip，打开终端 输入  pip3 –version 如图表示成功：</p><p><img src="https://i.loli.net/2020/10/16/2ax9zgHYOEN4Qcw.png" alt="image.png"></p><h4 id="5-安装实用插件"><a href="#5-安装实用插件" class="headerlink" title="5.安装实用插件"></a>5.安装实用插件</h4><p>插件简介：下述三个插件都是python的库</p><p>LibcSearcher用来泄露libc库中函数的偏移的库，</p><p>one_gadget用来寻找libc库中的execve(‘/bin/sh’, NULL, NULL)可以一个gadget就可以getshell</p><p>ROPgadget 做题的工具，用来找gadget的</p><h5 id="LibcSearcher，安装方法："><a href="#LibcSearcher，安装方法：" class="headerlink" title="LibcSearcher，安装方法："></a>LibcSearcher，安装方法：</h5><p>1.git clone <a href="https://github.com/lieanu/LibcSearcher.git">https://github.com/lieanu/LibcSearcher.git</a></p><p>2.cd LibcSearcher</p><p>3.python setup.py install</p><p>4.直接运行python exp.py会提示“No module named LibcSearcher”，需要将LibcSearcher.py 复制到当前目录（安装目录）</p><h5 id="one-gadget安装："><a href="#one-gadget安装：" class="headerlink" title="one_gadget安装："></a>one_gadget安装：</h5><p>sudo apt install ruby</p><p>sudo gem install one_gadget</p><h5 id="ROPgadgets安装与使用："><a href="#ROPgadgets安装与使用：" class="headerlink" title="ROPgadgets安装与使用："></a>ROPgadgets安装与使用：</h5><p>环境：sudo apt install git</p><p>安装命令：</p><p> sudo apt-get install python-capstone</p><p> git clone <a href="https://github.com/JonathanSalwan/ROPgadget.git">https://github.com/JonathanSalwan/ROPgadget.git</a></p><p> cd ROPgadget</p><p> sudo python setup.py install</p><h2 id="二-搭建过程的problem"><a href="#二-搭建过程的problem" class="headerlink" title="二.搭建过程的problem"></a>二.搭建过程的problem</h2><h3 id="1-python升级踩错"><a href="#1-python升级踩错" class="headerlink" title="1.python升级踩错"></a>1.python升级踩错</h3><p>起因，环境搭建过程总是显示python升级，可忽略，但我进行了多余升级的操作如图：</p><p><img src="https://i.loli.net/2020/10/16/tcvCxTauWqn1hRY.png" alt="image.png"></p><p>但是python默认启动python2，而我两个版本都去下载并且升级了python3版本，这并没有什么问题，你只需要在用的时候调用就行。</p><p>但是升级文章最后有python2.7和3.5版本之间随意切换的方法，我又进行了多余的操作，并且切换为原来的版本无效，但是python2和python3的版本均可见</p><p><img src="https://i.loli.net/2020/10/16/2BfqEmP6WR5L1CX.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/10/16/SbqIWZXu3z1QVdJ.png" alt="image.png"></p><p>升级原文链接：<a href="https://blog.csdn.net/jiangyongy/article/details/78902536">https://blog.csdn.net/jiangyongy/article/details/78902536</a></p><h3 id="2-软连接错乱"><a href="#2-软连接错乱" class="headerlink" title="2.软连接错乱"></a>2.软连接错乱</h3><p>切换之后，导致系统pip 和 pip3 的软连接错乱了，装完pip3之后将pip3命令软连接修改为pip，安装了py3 的pwntools。Python2.7和Python3.5的无法和平相处，pip冲突。</p><p><img src="https://i.loli.net/2020/10/16/l9sIFtO3UZxuHiG.png" alt="image.png"></p><p>解决方法：python2 -m pip install numpy，将py2放在pip安装下的最小单位，使用时调用。</p><p>原文链接：<a href="https://blog.csdn.net/franksking/article/details/74025158?utm_medium=distribute.pc_relevant.none-task-blog-title-5&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/franksking/article/details/74025158?utm_medium=distribute.pc_relevant.none-task-blog-title-5&amp;spm=1001.2101.3001.4242</a></p><h5 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h5><p>新建软连接并查看python版本：<a href="https://segmentfault.com/a/1190000021838605">https://segmentfault.com/a/1190000021838605</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​                                                                       &lt;/p&gt;
&lt;h4 id=&quot;1-ubuntu16-04设置系统语言为中文&quot;&gt;&lt;a href=&quot;#1-ubuntu16-04设置系统语</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://dh15219984801.store/2020/09/26/hello-world/"/>
    <id>https://dh15219984801.store/2020/09/26/hello-world/</id>
    <published>2020-09-26T08:36:55.885Z</published>
    <updated>2020-09-29T09:47:13.566Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
