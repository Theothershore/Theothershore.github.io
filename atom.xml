<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蜗牛的小屋</title>
  
  <subtitle>Hexo</subtitle>
  <link href="https://dh15219984801.store/atom.xml" rel="self"/>
  
  <link href="https://dh15219984801.store/"/>
  <updated>2020-10-17T15:27:12.080Z</updated>
  <id>https://dh15219984801.store/</id>
  
  <author>
    <name>Theothershore</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客主题搭建</title>
    <link href="https://dh15219984801.store/2020/10/17/title%20%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA/"/>
    <id>https://dh15219984801.store/2020/10/17/title%20%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-17T15:27:12.079Z</published>
    <updated>2020-10-17T15:27:12.080Z</updated>
    
    <content type="html"><![CDATA[<p>​                                                                       </p><h4 id="一-使用nexT主题"><a href="#一-使用nexT主题" class="headerlink" title="一.使用nexT主题"></a>一.<strong>使用nexT主题</strong></h4><h5 id="1-1下载nexT主题"><a href="#1-1下载nexT主题" class="headerlink" title="1.1下载nexT主题"></a><strong>1.1下载nexT主题</strong></h5><p>在Git Bash终端执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next1</span><br></pre></td></tr></table></figure><p>解压所下载的压缩包至站点的 themes 目录下， 并将解压后的文件夹名称更改为 next 。</p><h5 id="1-2启用nexT主题"><a href="#1-2启用nexT主题" class="headerlink" title="1.2启用nexT主题"></a><strong>1.2启用nexT主题</strong></h5><p>打开站点配置文件 _config.yml，找到 theme 字段，并将其值更改为 next。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next1</span><br></pre></td></tr></table></figure><p>在Git Bash终端执行命令hexo s，在浏览器中访问<a href="http://localhost:4000/%EF%BC%8C%E5%BD%93%E4%BD%A0%E7%9C%8B%E5%88%B0%E7%AB%99%E7%82%B9%E7%9A%84%E5%A4%96%E8%A7%82%E4%B8%8E%E4%B8%8B%E5%9B%BE%E6%89%80%E7%A4%BA%E7%B1%BB%E4%BC%BC%E6%97%B6%E5%8D%B3%E8%AF%B4%E6%98%8E%E4%BD%A0%E5%B7%B2%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85">http://localhost:4000/，当你看到站点的外观与下图所示类似时即说明你已成功安装</a> NexT 主题。这是 NexT 默认的 Scheme —— Muse。</p><p><img src="https://i.loli.net/2020/10/17/FV7jYTiKBGuPJHA.png" alt="image.png"><br>本博客使用的是NexT.Pisces主题，修改主题配置文件 _config.yml的 Schemes 字段的值为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scheme: Pisces1</span><br></pre></td></tr></table></figure><p>博客预览如图：</p><p><img src="https://i.loli.net/2020/10/17/aOKSDqYuRht5VeW.png" alt="image.png"></p><h4 id="二-NexT主题配置"><a href="#二-NexT主题配置" class="headerlink" title="二.NexT主题配置"></a><strong>二.NexT主题配置</strong></h4><h5 id="2-1主题基本设定"><a href="#2-1主题基本设定" class="headerlink" title="2.1主题基本设定"></a><strong>2.1主题基本设定</strong></h5><p>参照<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings">NexT使用文档</a>，设置界面语言、菜单、侧栏、头像、作者昵称和站点描述。由于该使用文档描述非常详细，本文不再赘述。此处需要注意，添加新的菜单项时，需要手动创建该页面才能正常访问，下面以分类页面为例讲述创建新页面的方法：</p><h5 id="2-2创建分类页面"><a href="#2-2创建分类页面" class="headerlink" title="2.2创建分类页面"></a><strong>2.2创建分类页面</strong></h5><p>在Git Bash终端执行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories1</span><br></pre></td></tr></table></figure><h5 id="2-3编辑分类页面"><a href="#2-3编辑分类页面" class="headerlink" title="2.3编辑分类页面"></a><strong>2.3编辑分类页面</strong></h5><p>添加页面类型字段，将其值设置为 “categories”，主题将自动为这个页面显示所有分类，如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false1234</span><br></pre></td></tr></table></figure><p>创建标签页的方法同上，只需要将type字段设置为”tags”即可。</p><h5 id="2-4添加侧栏社交链接"><a href="#2-4添加侧栏社交链接" class="headerlink" title="2.4添加侧栏社交链接"></a><strong>2.4添加侧栏社交链接</strong></h5><p>在主题配置文件 _config.yml中Sidebar Settings部分添加字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Social Links</span><br><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;wuxubj</span><br><span class="line">  Weibo: http:&#x2F;&#x2F;weibo.com&#x2F;wuxubj1234</span><br></pre></td></tr></table></figure><p>本博客将侧栏社交链接设置居中显示，修改themes\next\source\css_common\components\sidebar\sidebar-author-links.styl文件，添加如下样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.links-of-author-item &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  &#125;123</span><br></pre></td></tr></table></figure><h5 id="2-5添加侧栏友情链接"><a href="#2-5添加侧栏友情链接" class="headerlink" title="2.5添加侧栏友情链接"></a><strong>2.5添加侧栏友情链接</strong></h5><p>在主题配置文件 _config.yml中Sidebar Settings部分添加字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Blogrolls</span><br><span class="line">links_title: 友情链接</span><br><span class="line">links_layout: inline</span><br><span class="line">links_icon: link  # 设置图标</span><br><span class="line">links:</span><br><span class="line">  鱼汐笔记: https:&#x2F;&#x2F;yidongying.github.io&#x2F;123456</span><br></pre></td></tr></table></figure><p>本博客侧栏友情链接使用了与侧栏社交链接相同的css样式，但文本左对齐。实现方法为：<br>修改themes\next\layout_macro\sidebar.swig，将如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class&#x3D;&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">  &#123;% for name, link in theme.links %&#125;</span><br><span class="line">    &lt;li class&#x3D;&quot;links-of-blogroll-item&quot;&gt;</span><br><span class="line">      &lt;a href&#x3D;&quot;&#123;&#123; link &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; name &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      &lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;li&gt;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&lt;&#x2F;ul&gt;123456789</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for name, link in theme.links %&#125;</span><br><span class="line">  &lt;span class&#x3D;&quot;links-of-author-item&quot; style&#x3D;&quot;text-align:left&quot;&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;&#123;&#123; link &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; name &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">      &#123;&#123; name &#125;&#125;</span><br><span class="line">    &lt;&#x2F;a&gt;</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h4 id="三-NexT主题美化"><a href="#三-NexT主题美化" class="headerlink" title="三. NexT主题美化"></a><strong>三.</strong> <strong>NexT主题美化</strong></h4><h5 id="3-1修改导航栏图标"><a href="#3-1修改导航栏图标" class="headerlink" title="3.1修改导航栏图标"></a><strong>3.1修改导航栏图标</strong></h5><p>NexT 使用的是 <a href="https://fontawesome.com/?from=io">Font Awesome</a> 提供的图标， <a href="https://fontawesome.com/?from=io">Font Awesome</a> 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。对应的文件在themes\next\source\vendors\font-awesome中。<br>在<a href="http://fontawesome.dashgame.com/%E4%B8%AD%E6%9C%89%E5%9B%BE%E6%A0%87%E4%B8%8E%E5%85%B6%E5%90%8D%E7%A7%B0%E7%9A%84%E5%AF%B9%E5%BA%94%EF%BC%8C%E7%94%A8%E6%88%B7%E5%8F%AF%E6%A0%B9%E6%8D%AE%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E5%9B%BE%E6%A0%87%E3%80%82%E6%88%91%E7%9A%84menu_icons%E9%85%8D%E7%BD%AE%E4%B8%BA%EF%BC%9A">http://fontawesome.dashgame.com/中有图标与其名称的对应，用户可根据需要修改图标。我的menu_icons配置为：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: calendar-check-o12345678</span><br></pre></td></tr></table></figure><h5 id="3-2-修改文章内链接文本样式"><a href="#3-2-修改文章内链接文本样式" class="headerlink" title="3.2 修改文章内链接文本样式"></a><strong>3.2 修改文章内链接文本样式</strong></h5><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>修改文件themes\next\source\css_common\components\post\post.styl，添加如下css样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #0477ab;</span><br><span class="line">    text-decoration: underline;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;12345678</span><br></pre></td></tr></table></figure><p>选择.post-body是为了不影响标题，选择p是为了不影响首页“阅读全文”的显示样式。</p><h5 id="3-3在主题配置文件中添加字段"><a href="#3-3在主题配置文件中添加字段" class="headerlink" title="3.3在主题配置文件中添加字段"></a><strong>3.3在主题配置文件中添加字段</strong></h5><p>在主题配置文件 _config.yml中添加以下字段开启此功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h5 id="3-4生成sitemap"><a href="#3-4生成sitemap" class="headerlink" title="3.4生成sitemap"></a><strong>3.4生成sitemap</strong></h5><p>Sitemap用于通知搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。<br>执行以下命令，安装插件hexo-generator-sitemap，用于生成sitemap：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save1</span><br></pre></td></tr></table></figure><p>在站点配置文件 _config.yml中添加如下字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml12</span><br></pre></td></tr></table></figure><p>执行hexo g，就会在网站根目录生成 sitemap.xml 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​                                                                       &lt;/p&gt;
&lt;h4 id=&quot;一-使用nexT主题&quot;&gt;&lt;a href=&quot;#一-使用nexT主题&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>搭建博客</title>
    <link href="https://dh15219984801.store/2020/10/09/title%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://dh15219984801.store/2020/10/09/title%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-10-08T16:24:13.474Z</published>
    <updated>2020-10-17T15:33:31.726Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，github注册"><a href="#一，github注册" class="headerlink" title="一，github注册"></a>一，github注册</h4><p><strong>使用github来托管项目文件</strong></p><p><strong>仓库：即你的项目，你想在github上开源一个项目，就必须要新建一个Repository。</strong></p><p><strong>创建项目</strong>    项目名：用户名.github.io</p><p>搭建步骤：创建个人站点–新建仓库（注:仓库名必须是【用户名.github.io】）</p><p><strong>个人站点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;用户名.github.io</span><br></pre></td></tr></table></figure><h4 id="二，安装node"><a href="#二，安装node" class="headerlink" title="二，安装node"></a>二，安装node</h4><p>打开node官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;</span><br></pre></td></tr></table></figure><p>下载安装，点击Add to PATH选项，添加到环境变量</p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDICPDDDHDFCOHAGOGH"></p><p>则安装完成。</p><p>安装完node后，就可以使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="三，安装git"><a href="#三，安装git" class="headerlink" title="三，安装git"></a>三，安装git</h4><p><strong>通过git管理github托管项目代码</strong></p><p><strong>git是一个免费，开源的版本控制软件。</strong></p><h4 id="1，git基本工作流程"><a href="#1，git基本工作流程" class="headerlink" title="1，git基本工作流程"></a>1，git基本工作流程</h4><p>2.1，工作区（Working Directory） 添加，编辑，修改文件等</p><p>2.2，暂存区  暂存已经修改的文件最后统一提交到git仓库中</p><p>2.3，Git Repository（Git 仓库） 最终确定的文件保存到仓库，成为一个新的版本，并且对他人可见</p><p>a.  查看工作区和暂存区的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>b. 把工作区的内容添加到暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名</span><br></pre></td></tr></table></figure><p>c. 将暂存区的文件提交到仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;提交描述&quot;</span><br></pre></td></tr></table></figure><h4 id="2，实战演练"><a href="#2，实战演练" class="headerlink" title="2，实战演练"></a>2，实战演练</h4><p><strong>a，在文件目录下创建文件夹</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir 文件名</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDHCPDDDGDFCOHAGOGH"></p><p><strong>b，在文件内初始化git（创建git仓库）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd test</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDFDJDJCPDDDGDGCOHAGOGH"></p><p><strong>c，向仓库添加文件</strong></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADACPDDDGDICOHAGOGHhttp://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADBCPDDDGDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADBCPDDDGDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADCCPDDDHDACOHAGOGH"></p><h4 id="3，删除文件"><a href="#3，删除文件" class="headerlink" title="3，删除文件"></a>3，删除文件</h4><p><strong>a，删除工作区文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf 1.php</span><br></pre></td></tr></table></figure><p><strong>b，删除暂存区文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm 1.php</span><br></pre></td></tr></table></figure><p><strong>c，提交操作</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#39;提交描述&#39;</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADDCPDDDHDECOHAGOGH"></p><h4 id="4，Git初始化及仓库创建和操作"><a href="#4，Git初始化及仓库创建和操作" class="headerlink" title="4，Git初始化及仓库创建和操作"></a>4，Git初始化及仓库创建和操作</h4><p>设置用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#39;用户名&#39;</span><br></pre></td></tr></table></figure><p>设置用户名邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &#39;用户邮箱&#39;</span><br></pre></td></tr></table></figure><p>查看设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -list</span><br></pre></td></tr></table></figure><h4 id="5，Git管理远程仓库"><a href="#5，Git管理远程仓库" class="headerlink" title="5，Git管理远程仓库"></a>5，Git管理远程仓库</h4><p><strong>a，使用远程仓库的目的</strong></p><p>作用:备份，实现代码共享集中化管理</p><p><strong>b，将本地仓库同步到git远程仓库中</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>4，git克隆操作</strong></p><p>目的：将远程仓库（对应的项目）复制到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure><h4 id="四，githubSSH配置"><a href="#四，githubSSH配置" class="headerlink" title="四，githubSSH配置"></a>四，githubSSH配置</h4><p>GitHub配置SSH Key的目的是为了帮助我们在通过git提交代码时，不需要繁琐的验证过程，简化操作流程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;xiangshuo1992&#x2F;preload.git</span><br><span class="line">git@github.com:xiangshuo1992&#x2F;preload.git</span><br></pre></td></tr></table></figure><p>这两个地址展示的是同一个项目，前者是https url 直接有效网址打开，但是用户每次通过git提交的时候都要输入用户名和密码；后者是SSH URL，在通过git提交代码时，不需要验证过程。</p><p><strong>1，检测是否存在SSH KEY</strong></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADECPDDDHDHCOHAGOGH"></p><p><strong>如果没有，则需要生成一下</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Github的注册邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADFCPDDDHDICOHAGOGH"></p><h4 id="五，安装Hexo"><a href="#五，安装Hexo" class="headerlink" title="五，安装Hexo"></a>五，安装Hexo</h4><p>Hexo就是我们的个人博客网站的框架。这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。</p><p>在创建的文件夹命令行下，使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装成功后，需要初始化我们的博客，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 博客名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install #安装npm</span><br><span class="line">hexo s -p 端口号 #本地运行</span><br><span class="line">例：hexo s -p 5555</span><br><span class="line"></span><br><span class="line">或者 hexo s  #会自动给你配置一个端口</span><br></pre></td></tr></table></figure><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDADJCPDDDHDJCOHAGOGH"></p><p><img src="http://mkpt.gzmtu.edu.cn/meol/common/ckeditor/openfile.jsp?id=DBCPDCDCDHDGDBDECPDDDJDGCOHAGOGH"></p><p><strong>Hexo常用命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级</span><br><span class="line">hexo init #初始化博客</span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line">hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate #生成</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server #启动服务预览</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><h4 id="六，发布网站"><a href="#六，发布网站" class="headerlink" title="六，发布网站"></a>六，发布网站</h4><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件</p><p>进入跟目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件</p><p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><p>deploy:<br>type: git<br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>branch: master</p><p>如图：<img src="https://i.loli.net/2020/10/17/IFe8WqKrhXcDZUJ.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一，github注册&quot;&gt;&lt;a href=&quot;#一，github注册&quot; class=&quot;headerlink&quot; title=&quot;一，github注册&quot;&gt;&lt;/a&gt;一，github注册&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用github来托管项目文件&lt;/strong&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Pwn环境搭建</title>
    <link href="https://dh15219984801.store/2020/10/03/Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://dh15219984801.store/2020/10/03/Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-03T05:33:06.988Z</published>
    <updated>2020-10-18T04:33:55.461Z</updated>
    
    <content type="html"><![CDATA[<p>​                                                                       </p><h4 id="1-ubuntu16-04设置系统语言为中文"><a href="#1-ubuntu16-04设置系统语言为中文" class="headerlink" title="1.ubuntu16.04设置系统语言为中文"></a>1.ubuntu16.04设置系统语言为中文</h4><p>参考文献：<a href="https://jingyan.baidu.com/article/3aed632ec1d120701180916b.html">https://jingyan.baidu.com/article/3aed632ec1d120701180916b.html</a></p><h4 id="2-更换Ubuntu16-04镜像下载源，推荐阿里源"><a href="#2-更换Ubuntu16-04镜像下载源，推荐阿里源" class="headerlink" title="2.更换Ubuntu16.04镜像下载源，推荐阿里源"></a>2.更换Ubuntu16.04镜像下载源，推荐阿里源</h4><p>首先我们要找到国内的镜像源路径，这里要注意要找ubuntu16.04相对应的，打开链接如图：<a href="https://www.cnblogs.com/hello-/articles/11151038.htm">https://www.cnblogs.com/hello-/articles/11151038.htm</a></p><p><img src="https://i.loli.net/2020/10/15/gPuz9nUkeZVBrFD.png" alt="image-20201015145406067.png"></p><p>接着备份系统自带更新源配置文件，打开终端直接用命令：cp /etc/apt/sources.list /etc/apt/sources.list.backup 进行备份。</p><p>继续配置文件sources.list内容，输入命令：gedit  sources.list 打开文件，把文件内容全部删除，再把更新源路径粘贴进来。粘贴后如下图：<img src="https://i.loli.net/2020/10/15/qjYrBins1DmCQNO.png" alt="1602745093_1_.png"></p><p>保存，退出。</p><p>最后更新源：输入命令：apt  update （也可以用apt-get update，<a href="https://blog.csdn.net/maizousidemao/article/details/79859669">apt与apt-get的区别</a>）。</p><p>开始更新源，结果如图。</p><p><img src="https://i.loli.net/2020/10/18/BVcfMtev9A361aN.png" alt="image.png"></p><h4 id="3-必备环境安装"><a href="#3-必备环境安装" class="headerlink" title="3.必备环境安装"></a>3.必备环境安装</h4><p>安装git ：sudo apt-get install git </p><p>安装VIM ：sudo apt-get install vim</p><p>安装完Git之后一般情况情况下，因为特定原因导致，DNS解析出现问题从而使得Git Clone 速度巨慢。解决办法：</p><p>登录网页<a href="http://www.ipaddress.com/">www.ipaddress.com</a> 查找 <a href="https://links.jianshu.com/go?to=http://github.global-ssl.fastly.net/">github.glo        t</a> 和<a href="https://links.jianshu.com/go?to=http://github.com/">github.com </a>域名对应地址：</p><p><img src="https://i.loli.net/2020/10/16/Ff7bySNPGLhn38p.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/10/16/fd6htvrcGemRA1T.png" alt="image.png"></p><p>更改DNS解析地址 ：sudo gedit /etc/hosts</p><p>在其最后加上所查地址：</p><p>151.101.185.194 <a href="https://links.jianshu.com/go?to=http://github.global-ssl.fastly.net/">github.global.ssl.fastly.net</a></p><p>192.30.253.112  <a href="https://links.jianshu.com/go?to=http://github.com/">github.com</a></p><p>保存退出，重启网卡：sudo /etc/init.d/networking restart</p><h4 id="4-安装pwntools"><a href="#4-安装pwntools" class="headerlink" title="4.安装pwntools"></a>4.安装pwntools</h4><p>参考文献：<a href="https://blog.csdn.net/qq_43613772/article/details/97046215">https://blog.csdn.net/qq_43613772/article/details/97046215</a></p><h5 id="32位依赖库："><a href="#32位依赖库：" class="headerlink" title="32位依赖库："></a>32位依赖库：</h5><p> apt-get install lib32ncurses5</p><p> apt-get install lib32z1</p><h5 id="pwndbg安装"><a href="#pwndbg安装" class="headerlink" title="pwndbg安装"></a><strong>pwndbg安装</strong></h5><p>执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;pwndbg&#x2F;pwndbg</span><br><span class="line">cd pwndbg</span><br><span class="line">sudo #.&#x2F;setup.sh</span><br></pre></td></tr></table></figure><h5 id="安装pip："><a href="#安装pip：" class="headerlink" title="安装pip："></a>安装pip：</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><p>执行如下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 1. 更新系统包</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get upgrade</span><br><span class="line"> </span><br><span class="line"># 2. 安装Pip</span><br><span class="line">$ sudo apt-get install python-pip</span><br><span class="line"> </span><br><span class="line"># 3. 检查 pip 是否安装成功</span><br><span class="line">$ pip -V</span><br></pre></td></tr></table></figure><h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><p>参考文献 ：<a href="https://blog.csdn.net/mrwxh/article/details/79991339?utm_medium=distribute.pc_relevant.none-task-blog-title-8&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/mrwxh/article/details/79991339?utm_medium=distribute.pc_relevant.none-task-blog-title-8&amp;spm=1001.2101.3001.4242</a></p><p>​    01 下载pip：<a href="https://pypi.org/project/pip/#files"> pip-10.0.0.tar</a></p><p>​    02 将pip包上传至linux操作系统中，并解压</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf pip<span class="number">-10.0</span><span class="number">.0</span>.tar.gz</span><br></pre></td></tr></table></figure><p>​    03 切换到解压出来的pip目录，并且安装pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pip<span class="number">-10.0</span><span class="number">.0</span>/</span><br><span class="line"></span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><p>   <strong>报错：</strong>ImportError: No module named setuptools</p><p>​    解决方案：下载安装<a href="https://pan.baidu.com/s/1SXPexMkBP5RxJmypVXg-Fg">setuptools</a>：</p><p>​    下载：下载<a href="https://pan.baidu.com/s/1SXPexMkBP5RxJmypVXg-Fg">setuptools</a></p><p>​    安装：上传至ubuntu系统的用户目录后解压；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd setuptools<span class="number">-39.0</span><span class="number">.1</span>/</span><br><span class="line">sudo python setup.py install</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p>​     04 切换到之前的pip目录安装pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pip<span class="number">-10.0</span><span class="number">.0</span>/</span><br><span class="line">sudo python2 setup.py install</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p>​    05 检测：Ubuntu 检测是否安装了pip，打开终端 输入  pip3 –version 如图表示成功：</p><p><img src="https://i.loli.net/2020/10/16/2ax9zgHYOEN4Qcw.png" alt="image.png"></p><p>注：链接也可以下载paygame。</p><h4 id="5-安装实用插件"><a href="#5-安装实用插件" class="headerlink" title="5.安装实用插件"></a>5.安装实用插件</h4><p>插件简介：下述三个插件都是python的库</p><p>LibcSearcher用来泄露libc库中函数的偏移的库，</p><p>one_gadget用来寻找libc库中的execve(‘/bin/sh’, NULL, NULL)可以一个gadget就可以getshell</p><p>ROPgadget 做题的工具，用来找gadget的</p><h5 id="LibcSearcher，安装方法："><a href="#LibcSearcher，安装方法：" class="headerlink" title="LibcSearcher，安装方法："></a>LibcSearcher，安装方法：</h5><p>1.git clone <a href="https://github.com/lieanu/LibcSearcher.git">https://github.com/lieanu/LibcSearcher.git</a></p><p>2.cd LibcSearcher</p><p>3.python setup.py install</p><p>4.直接运行python exp.py会提示“No module named LibcSearcher”，需要将LibcSearcher.py 复制到当前目录（安装目录）</p><h5 id="one-gadget安装："><a href="#one-gadget安装：" class="headerlink" title="one_gadget安装："></a>one_gadget安装：</h5><p>sudo apt install ruby</p><p>sudo gem install one_gadget</p><h5 id="ROPgadgets安装与使用："><a href="#ROPgadgets安装与使用：" class="headerlink" title="ROPgadgets安装与使用："></a>ROPgadgets安装与使用：</h5><p>环境：sudo apt install git</p><p>安装命令：</p><p> sudo apt-get install python-capstone</p><p> git clone <a href="https://github.com/JonathanSalwan/ROPgadget.git">https://github.com/JonathanSalwan/ROPgadget.git</a></p><p> cd ROPgadget</p><p> sudo python setup.py install</p><h2 id="二-搭建过程的problem"><a href="#二-搭建过程的problem" class="headerlink" title="二.搭建过程的problem"></a>二.搭建过程的problem</h2><h3 id="1-python升级踩错"><a href="#1-python升级踩错" class="headerlink" title="1.python升级踩错"></a>1.python升级踩错</h3><p>起因，环境搭建过程总是显示python升级，可忽略，但我进行了多余升级的操作如图：</p><p><img src="https://i.loli.net/2020/10/16/tcvCxTauWqn1hRY.png" alt="image.png"></p><p>但是python默认启动python2，而我两个版本都去下载并且升级了python3版本，这并没有什么问题，你只需要在用的时候调用就行。</p><p>但是升级文章最后有python2.7和3.5版本之间随意切换的方法，我又进行了多余的操作，并且切换为原来的版本无效，但是python2和python3的版本均可见</p><p><img src="https://i.loli.net/2020/10/16/2BfqEmP6WR5L1CX.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/10/16/SbqIWZXu3z1QVdJ.png" alt="image.png"></p><p>升级原文链接：<a href="https://blog.csdn.net/jiangyongy/article/details/78902536">https://blog.csdn.net/jiangyongy/article/details/78902536</a></p><h3 id="2-软连接错乱"><a href="#2-软连接错乱" class="headerlink" title="2.软连接错乱"></a>2.软连接错乱</h3><p>切换之后，导致系统pip 和 pip3 的软连接错乱了，装完pip3之后将pip3命令软连接修改为pip，安装了py3 的pwntools。Python2.7和Python3.5的无法和平相处，pip冲突。</p><p><img src="https://i.loli.net/2020/10/16/l9sIFtO3UZxuHiG.png" alt="image.png"></p><p>解决方法：python2 -m pip install numpy，将py2放在pip安装下的最小单位，使用时调用。</p><p>原文链接：<a href="https://blog.csdn.net/franksking/article/details/74025158?utm_medium=distribute.pc_relevant.none-task-blog-title-5&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/franksking/article/details/74025158?utm_medium=distribute.pc_relevant.none-task-blog-title-5&amp;spm=1001.2101.3001.4242</a></p><h5 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h5><p>新建软连接并查看python版本：<a href="https://segmentfault.com/a/1190000021838605">https://segmentfault.com/a/1190000021838605</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​                                                                       &lt;/p&gt;
&lt;h4 id=&quot;1-ubuntu16-04设置系统语言为中文&quot;&gt;&lt;a href=&quot;#1-ubuntu16-04设置系统语</summary>
      
    
    
    
    
  </entry>
  
</feed>
